@using Thesis.Areas.Forum.Models;
@model (Post post, ForumUser user)

<style>
    .hidden {
        display: none;
    }
    .bi {
        cursor: pointer;
    }
</style>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close hideModal">&times;</button>
                <h4 class="modal-title">Are you sure you want to delete this post?</h4>
            </div>
            <div class="modal-body">
                This action can't be reversed.
                <br />
                <button id="delete" class="btn btn-danger">Delete post</button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default hideModal">Close without deleting</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="commentModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close hideModal">&times;</button>
                <h4 class="modal-title">Are you sure you want to delete this comment?</h4>
            </div>
            <div class="modal-body">
                This action can't be reversed.
                <br />
                <button id="deleteComment" class="btn btn-danger">Delete comment</button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default hideCommentModal">Close without deleting</button>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-body">
        @if (@Model.user.canDelete)
        {
            <span data-id="@Model.post.id" class="showModal delete" style="float: right;"><i class="bi bi-trash-fill"></i></span>
        }
        @if ((Model.user.canEdit && Model.post.authorId == Model.user.userId) || Model.user.canEditAny)
        {
            <a href="/forum/forum/edit?id=@Model.post.id" style="float: right; margin-right: 1em; color: black"><i class="bi bi-pencil-fill"></i></a>
        }
        <h5 class="card-title">@Model.post.title</h5>
        <p class="card-text">
            @Html.Raw(Model.post.content)
        </p>
    </div>
    <div class="card-footer text-muted">
        Written by @Model.post.author.UserName
        @await Component.InvokeAsync("DateWithText", (Model.post.date, "Written"))
        @if (Model.post.edited)
        {
            string editInfo = Model.post.editorId == Model.post.authorId ? "Edited" : "Edited by " + Model.post.editor.UserName;
            @await Component.InvokeAsync("DateWithText", (Model.post.editDate, editInfo))
        }
    </div>
</div>

@foreach (PostComment comment in Model.post.comments)
{
    <br />
    <div class="card">
        <div class="card-body">
            @if (@Model.user.canDelete)
            {
                <span data-id="@comment.id" class="showCommentModal deleteComment" style="float: right;"><i class="bi bi-trash-fill"></i></span>
            }
            @if ((Model.user.canEdit && comment.authorId == Model.user.userId) || Model.user.canEditAny)
            {
                <a href="#writeComment" style="float: right; margin-right: 1em; color: black"><i data-id="@comment.id" class="bi bi-pencil-fill editComment"></i></a>
            }
            <p class="card-text" id="comment_@comment.id">
                @Html.Raw(comment.content)
            </p>
        </div>
        <div class="card-footer text-muted">
            Written by @comment.author.UserName
            @await Component.InvokeAsync("DateWithText", (comment.date, "Written"))
            @if (comment.edited)
            {
                string editInfo = comment.editorId == comment.authorId ? "Edited" : "Edited by " + comment.editor.UserName;
                @await Component.InvokeAsync("DateWithText", (comment.editDate, editInfo))
            }
        </div>
    </div>
}
<span id="writeComment" name="writeComment"></span>
@if (Model.user.canComment)
{
    <br />
    <button id="showCommentBox" class="btn btn-info">Comment</button>
    <div class="hidden" id="commentBox">
        <h5>Comment</h5>
        <textarea style="width: 100%" id="commentText"></textarea>
        <button data-id="0" id="saveComment" class="btn btn-success">Save comment</button>
    </div>
}

<script type="text/javascript">
    window.onload = function () {
        $('.showModal').click(function () {
            $("#myModal").modal("show");
            $("#myModal").data('id', $(this).data('id'));
        })
        $('.hideModal').click(function () {
            $("#myModal").modal("hide");
        })
        $('.showCommentModal').click(function () {
            $("#commentModal").modal("show");
            $("#commentModal").data('id', $(this).data('id'));
        })
        $('.hideCommentModal').click(function () {
            $("#commentModal").modal("hide");
        })
        $('#showCommentBox').click(function () {
            $('#saveComment').data('id', 0);
            if($('#commentBox').hasClass('hidden'))
            {
                $('#commentBox').removeClass('hidden');
            }
            else
            {
                $('#commentBox').addClass('hidden');
                $('#commentText').val("");
            }
        })

        $('#saveComment').click(function () {
            $('#commentBox').addClass('hidden');            
            const content = $('#commentText').val();
            $('#commentText').val("");

            var url = "/Forum/Forum/saveComment?id=@Model.post.id";
            if ($('#saveComment').data('id') !== 0)  {
                @if (Model.user.canEditAny)
                {
                    <text>
                        url = "/Forum/Forum/editComment?id=" + $('#saveComment').data('id');
                    </text>
                }
                else
                {
                    @if (Model.user.canEdit)
                    {
                        <text>
                          url = "/Forum/Forum/updateComment?id=" + $('#saveComment').data('id');
                        </text>
                    }
                }

            }
            fetch(url, {
                method: 'POST',
                headers: {
                    Accept: 'application.json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(content),
            })
                .then(function (a) {
                    return a.json();
                })
                .then(function (data) {
                    Toastify({
                        text: data.text,
                        duration: 3000,
                        style: {
                            background: data.success ? "green" : "red"
                        }
                    }).showToast();
                    if (data.success) {
                        setTimeout(() => {
                            location.reload();
                        }, 1000);
                    }
                })
                .catch(error => Toastify({
                    text: error,
                    duration: 3000,
                    style: {
                        background: "red"
                    }
                }).showToast())
        })

        $('.editComment').click(function () {
            $('#commentBox').removeClass('hidden');
            const id = $(this).data('id');
            const comment = $(`#comment_${id}`).text().trim();
            $('#saveComment').data('id', id);
            $('#commentText').val(comment)
        })

        $('#delete').click(function () {
            $("#myModal").modal("hide");
            const id = $('#myModal').data('id');
            fetch("/Forum/Forum/deletePost", {
                method: 'POST',
                headers: {
                    Accept: 'application.json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(id),
            })
                .then(function (a) {
                    return a.json();
                })
                .then(function (data) {
                    Toastify({
                        text: data.text,
                        duration: 3000,
                        style: {
                            background: data.success ? "green" : "red"
                        }
                    }).showToast();
                    if (data.success) {
                        setTimeout(() => {
                            location.reload();
                        }, 1000);
                    }
                })
                .catch(error => Toastify({
                    text: error,
                    duration: 3000,
                    style: {
                        background: "red"
                    }
                }).showToast())
        })

        $('#deleteComment').click(function () {
            $("#commentModal").modal("hide");
            const id = $('#commentModal').data('id');
            fetch("/Forum/Forum/deleteComment", {
                method: 'POST',
                headers: {
                    Accept: 'application.json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(id),
            })
                .then(function (a) {
                    return a.json();
                })
                .then(function (data) {
                    Toastify({
                        text: data.text,
                        duration: 3000,
                        style: {
                            background: data.success ? "green" : "red"
                        }
                    }).showToast();
                    if (data.success) {
                        setTimeout(() => {
                            location.reload();
                        }, 1000);
                    }
                })
                .catch(error => Toastify({
                    text: error,
                    duration: 3000,
                    style: {
                        background: "red"
                    }
                }).showToast())
        })

    }
</script>
@using Thesis.Areas.Forum.Models;
@model (Post post, ForumUser user, string url)

<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
	<title>CKEditor 5 DecoupledDocumentEditor build</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="w.idth=device-width, initial-scale=1">
	<link rel="icon" type="image/png" href="https://c.cksource.com/a/1/logos/ckeditor5.png">
	<link rel="stylesheet" href="~/css/wysiwyg.css" asp-append-version="true" />
</head>
<body data-editor="DecoupledDocumentEditor" data-collaboration="false" data-revision-history="false">
	<main>
		<div class="message">
			<div class="centered">
				<br />
				<br />
				<input value="@Model.post.title" id="title" type="text" class="form-control" placeholder="Title">
				<h2>Enter text</h2>
			</div>
		</div>
		<div class="centered">
			<div class="row">
				<div class="document-editor__toolbar"></div>
			</div>
			<div class="row row-editor">
				<div data-course="0" id="save" style="background-color: green" onclick="save(@Model.post.id)" class="btn btn-success">Save</div>
				<div class="editor-container">
					<div class="editor">
						@Html.Raw(Model.post.content)
					</div>
				</div>
			</div>
		</div>
	</main>
	<footer>
	</footer>
	<script src="~/js/ckeditor.js"></script>
	<script>
		DecoupledDocumentEditor
			.create(document.querySelector('.editor'), {
				licenseKey: '',
			})
			.then(editor => {
				window.editor = editor;

				// Set a custom container for the toolbar.
				document.querySelector('.document-editor__toolbar').appendChild(editor.ui.view.toolbar.element);
				document.querySelector('.ck-toolbar').classList.add('ck-reset_all');
			})
			.catch(error => {
				Toastify({
					text: error,
					duration: 3000,
					style: {
						background: "red"
					}
				}).showToast();
			});
		function save(id) {
			const post = {
				id: id,
				title: $('#title').val(),
				content: $('.editor').html(),
			};
			fetch('@Model.url', {
				method: 'POST',
				headers: {
					Accept: 'application.json',
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(post),
			})
				.then(function (a) {
					return a.json();
				})
				.then(function (data) {
					Toastify({
						text: data.text,
						duration: 3000,
						style: {
							background: data.success ? "green" : "red"
						}
					}).showToast();
					if (data.success) {
						setTimeout(() => {
							location.href = data.data[0];
						}, 1000);
					}
				})
		}

	</script>
</body>
</html>
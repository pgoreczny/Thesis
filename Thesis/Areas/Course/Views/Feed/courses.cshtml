@using Thesis.Models
@model (List<Course>, List<CourseApplicationUser>)

<title>Available courses</title>

<table class="table table-striped .table-responsive">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Description
            </th>
            <th>
                Start date
            </th>
            <th>
                End date
            </th>
            <th>
                Price
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (Thesis.Models.Course course in Model.Item1)
    {
        <tr class="userrow" data-id="@course.id">
            <td>
                @course.name
            </td>
            <td>
                <span>@course.description</span>
            </td>
            <td>
                @course.startDate.ToString("dd-MM-yyyy")
            </td>
            <td>
                @course.endDate.ToString("dd-MM-yyyy")
            </td>
            <td>
                @course.price
            </td>
            <td>
                @{
                    List<CourseApplicationUser> applications = Model.Item2.Where(x => x.CourseId == course.id).ToList();
                }
                @if (applications.Count == 0) {
                    <button class="btn btn-primary" onclick="location.href='/Course/Feed/joinCourse?id=@course.id';">Join</button>
                }
                else
                {
                    switch (applications[0].status) {
                        case enCourseUserStatus.approved:
                                <button onclick="location.href='/Course/Feed/leaveCourse?id=@course.id';">Leave</button>
                            break;
                        case enCourseUserStatus.waitingForApproval:
                            <span>Waiting for approval</span>
                            break;
                        case enCourseUserStatus.denied:
                            <span style="color: red;">Denied</span>
                            break;
                        case enCourseUserStatus.finished:
                            <span>The course is finished</span>
                            break;
                    }
                }
            </td>
        </tr>
    }
</table>

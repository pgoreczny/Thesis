@using Thesis.Models
@model Activity
<htmL>
    <head>
        <style>
            .download {
                cursor: pointer;
            }
        </style>
    </head>
   <body>
      <form id="editForm" data-user="@Model.id" method="post" action="/Course/Activity/Save">
        <div id="submitForm" class="btn btn-primary">Save</div>
        <input name="id" style="visibility: hidden" id = "id" value = "@Model.id" />
        <input name="courseId" style="visibility: hidden" id = "courseId" value = "@Model.courseId" />
        <input name="activityType" style="visibility: hidden" id = "activityType" value = "@Model.activityType" />
        @await Component.InvokeAsync("Input", ("title", "Title", Model.title))
        @await Component.InvokeAsync("TextArea", ("text", "Content", Model.text))
        @await Component.InvokeAsync("DateInput", ("showDate", "Show date", Model.showDate))
        @if (Model.activityType == enActivityType.task)
        {
            @await Component.InvokeAsync("DateInput", ("dueDate", "Due date", Model.dueDate))
            @await Component.InvokeAsync("Checkbox", ("allowText", "Allow text answers", Model.allowText))
            @await Component.InvokeAsync("Checkbox", ("allowFIle", "Allow files as answers", Model.allowFile))
        }
      </form>

      @if (Model.id > 0)
         {
             @await Component.InvokeAsync("UploadFile", ("/Course/Activity/SaveFile?id=" + @Model.id.ToString(), "Add file", ""))
             <hr />
            <table class="table table-striped .table-responsive">
                <thead>
                    <tr>
                        <th>Filename</th>
                        <th>Download</th>
                    </tr>
                </thead>
                @foreach (File file in Model.files)
                {
                    <tr>
                        <td>@file.showName</td>
                        <td data-name="@file.showName" data-id="@file.Id" class="download"><i class="bi bi-download"></i></td>
                    </tr>
                }
            </table>
         }
        @if (Model.activityType == enActivityType.task)
        {

            <hr />
            <h2>Answers</h2>
            <table class="table table-striped .table-responsive">
                <thead>
                    <tr>
                        <th>Student</th>
                        <th>Entry date</th>
                        <th>Check on-line</th>
                        <th>Download</th>
                        <th>Checked</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (Answer answer in Model.answers)
                {
                    <tr>
                        <td>@answer.student.UserName</td>
                        <th>@await Component.InvokeAsync("DateLabel", answer.entryDate)</th>
                        <td>//todo</td>
                        <td data-id="@answer.fileId" class="download"><i class="bi bi-download"></i></td>
                        <td>
                            @if (answer.isChecked)
                            {
                                <i style="color: green" class="bi bi-check"></i>
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }
      <script type="text/javascript">
         window.onload = function() {
             $('#submitForm').click(function(e) {
                 e.stopPropagation();
                 var form = Object.fromEntries(new FormData($('#editForm')[0]));
                 form["showDate"] = formatDate($('#showDate').val());
                 if ($('#activityType').val() === 'task') {
                     form["allowFIle"] = form["allowFIle"] == 'on' ? true : false; 
                     form["allowText"] = form["allowText"] == 'on' ? true : false; 
                     form["dueDate"] = formatDate($('#dueDate').val());
                 }
                 var formData = new FormData();
                 for ( var key in form ) {
                     formData.append(key, form[key]);
                 }
                 console.log(form);
                 fetch("/Course/Activity/Save", {
                      method: 'POST',
                      body: formData,
                 }).then(function () {
                    Toastify({
                        text: "Activity saved successfully",
                        duration: 3000,
                        style: {
                            background: "green"
                        }
                    }).showToast();
                    if (data.success) {
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    }
                });
             });
             $('#showDate').datepicker({
                uiLibrary: 'bootstrap5',
                format: 'dd-mm-yyyy'
             });
             $('#dueDate').datepicker({
                uiLibrary: 'bootstrap5',
                format: 'dd-mm-yyyy'
             });
             $('.download').click(function () {
                 fetch('/Course/Activity/GetFile?id=' + $(this).data('id'))
                  .then( res => res.blob() )
                  .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.style.display = 'none';
                    a.href = url;
                    a.download = $(this).data('name');
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                  })
             })
         }
      </script>
   </body>
</html>